<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.complitex.flexbuh.document.service.EmployeeBean">
    <resultMap id="employeeResultMap" type="org.complitex.flexbuh.document.entity.Employee">
        <id column="id" property="id"/>
        <result column="session_id" property="sessionId"/>
        <result column="person_profile_id" property="personProfileId"/>
        <result column="htin" property="htin"/>
        <result column="last_name" property="lastName"/>
        <result column="first_name" property="firstName"/>
        <result column="middle_name" property="middleName"/>
        <result column="hbirthday" property="hbirthday"/>
        <result column="hdate_in" property="hdateIn"/>
        <result column="hdate_out" property="hdateOut"/>
    </resultMap>

    <select id="selectEmployee" parameterType="long" resultMap="employeeResultMap">
        select * from `employee` where `id` = #{id}
    </select>

    <sql id="selectEmployeesWhere">
        <where>
            <if test="htin != null">and e.`htin` like concat('%', #{htin}, '%')</if>
            <if test="hname != null">and concat_ws(' ',e.`last_name`, e.`first_name`, e.`middle_name`) like concat('%', #{hname}, '%')</if>
            <if test="hbirthday != null">and e.`hbirthday` = DATE(#{hbirthday})</if>
            <if test="hdateIn != null">and e.`hdate_in` = DATE(#{hdateIn})</if>
            <if test="hdateOut != null">and e.`hdate_out` = DATE(#{hdateOut})</if>
            and e.`session_id` = #{sessionId}
            and pp.`selected` = true
        </where>
    </sql>

    <select id="selectEmployees" parameterType="org.complitex.flexbuh.document.entity.EmployeeFilter"
            resultMap="employeeResultMap">
        select e.*, concat_ws(' ',e.`last_name`, e.`first_name`, e.`middle_name`) as `hname`
        from `employee` e left join `person_profile` pp on (e.`person_profile_id` = pp.`id`)

        <include refid="selectEmployeesWhere"/>
        order by ${sortProperty}
        <choose><when test="ascending">asc</when><otherwise>desc</otherwise></choose>
        <if test="first != 0 and count != 0">limit #{first}, #{count}</if>
    </select>

    <select id="selectEmployeesCount" parameterType="org.complitex.flexbuh.document.entity.EmployeeFilter"
            resultType="int">
        select count(*) from `employee` e left join `person_profile` pp on (e.`person_profile_id` = pp.`id`)
        <include refid="selectEmployeesWhere"/>
    </select>

    <insert id="insertEmployee" parameterType="org.complitex.flexbuh.document.entity.Employee">
        insert into `employee` (`session_id`, `person_profile_id`, `htin`, `last_name`, `first_name`, `middle_name`,
         `hbirthday`, `hdate_in`, `hdate_out`)
          values (#{sessionId}, #{personProfileId}, #{htin}, #{lastName}, #{firstName}, #{middleName},
           #{hbirthday}, #{hdateIn}, #{hdateOut})
    </insert>

    <update id="updateEmployee" parameterType="org.complitex.flexbuh.document.entity.Employee">
        update `employee` set `person_profile_id` = #{personProfileId}, `htin` = #{htin},
          `last_name` = #{lastName}, `first_name` = #{firstName}, `middle_name` = #{middleName},
          `hbirthday` = #{hbirthday}, `hdate_in` = #{hdateIn}, `hdate_out` = #{hdateOut}
        where `id` = #{id}
    </update>

    <delete id="deleteEmployee" parameterType="long">
        delete from `employee` where `id` = #{id}
    </delete>
</mapper>