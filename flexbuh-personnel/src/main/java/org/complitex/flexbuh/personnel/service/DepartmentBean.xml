<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.complitex.flexbuh.personnel.service.DepartmentBean">
    <resultMap id="departmentResultMap" type="org.complitex.flexbuh.personnel.entity.Department"
            extends="org.complitex.flexbuh.common.entity.TemporalDomainObject.temporalDomainObjectResultMap">

        <result column="name" property="name"/>
        <result column="code" property="code"/>

        <association property="organization" column="{id=organization_id, currentDate=current_date}"
                     select="org.complitex.flexbuh.common.service.organization.OrganizationBean.selectCurrentOrganizationById"/>

        <association property="masterDepartment" column="{id=master_id, currentDate=current_date}"
                     select="selectCurrentDepartmentById"/>

        <collection property="childDepartments" column="{masterId=id, currentDate=current_date}"
                    select="selectCurrentChildDepartmentsByMasterId"/>

    </resultMap>

    <sql id="columns">
        <include refid="org.complitex.flexbuh.common.entity.TemporalDomainObject.columns"/>,
        `name`, `code`, `organization_id`<if test="masterDepartment != null">, `master_id`</if>
    </sql>

    <sql id="properties">
        <include refid="org.complitex.flexbuh.common.entity.TemporalDomainObject.properties"/>,
        #{name}, #{code}, #{organization.id}<if test="masterDepartment != null">, #{masterDepartment.id}</if>
    </sql>

    <sql id="filter">
        <if test="filter != null">
            <if test="filter.name != null"> and `name` like concat('%', #{filter.name}, '%')</if>
            <if test="filter.code != null"> and `type` like #{filter.code}</if>
            <if test="filter.organizationId != null"> and `organization_id` = #{filter.organizationId}</if>
            <if test="filter.organizationId != null and filter.masterId == null"> and `master_id` is null</if>
            <if test="filter.masterId != null"> and `master_id` = #{filter.masterId}</if>
        </if>
    </sql>

    <sql id="filter_order_limit">
        <if test="filter != null">
            <if test="filter.name != null"> and `name` like concat('%', #{filter.name}, '%')</if>
            <if test="filter.code != null"> and `type` like #{filter.code}</if>
            <if test="filter.organizationId != null"> and `organization_id` = #{filter.organizationId}</if>
            <if test="filter.organizationId != null and filter.masterId == null"> and `master_id` is null</if>
            <if test="filter.masterId != null"> and `master_id` = #{filter.masterId}</if>
            order by ${filter.sortProperty}
            <choose><when test="filter.ascending">asc</when><otherwise>desc</otherwise></choose>
            limit #{filter.first}, #{filter.count}
        </if>
    </sql>

    <insert id="insertDepartment"
            parameterType="org.complitex.flexbuh.personnel.entity.Department">

        <selectKey keyProperty="id" order="BEFORE" resultType="long">
            SELECT <include refid="org.complitex.flexbuh.common.entity.TemporalDomainObject.generateId"/>
            FROM `department`
        </selectKey>

        insert into `department` (
        <include refid="columns"/>
        )
        values (
        <include refid="properties"/>
        )

    </insert>

    <insert id="updateDepartment"
            parameterType="org.complitex.flexbuh.personnel.entity.Department">

        <selectKey keyProperty="version" order="BEFORE" resultType="long">
            SELECT <include refid="org.complitex.flexbuh.common.entity.TemporalDomainObject.generateVersion"/>
            FROM `department` WHERE id = #{id}
        </selectKey>

        insert into `department` (
        <include refid="columns"/>
        )
        values (
        <include refid="properties"/>
        )
    </insert>

    <update id="updateDepartmentNullCompletionDate"
            parameterType="org.complitex.flexbuh.personnel.entity.Department">

        update `department` <include refid="org.complitex.flexbuh.common.entity.TemporalDomainObject.updateNullCompletionDate"/>

    </update>

    <update id="updateDepartmentCompletionDate"
            parameterType="org.complitex.flexbuh.personnel.entity.Department">

        update `department` <include refid="org.complitex.flexbuh.common.entity.TemporalDomainObject.updateCompletionDate"/>

    </update>

    <update id="deleteDepartment"
            parameterType="org.complitex.flexbuh.personnel.entity.Department">

        update `department` <include refid="org.complitex.flexbuh.common.entity.TemporalDomainObject.delete"/>

    </update>

    <select id="selectCurrentDepartmentById" parameterType="map" resultMap="departmentResultMap">
        select *, #{currentDate} as `current_date` from `department` where `id` = #{id} and
        <include refid="org.complitex.flexbuh.common.entity.TemporalDomainObject.currentDateConstraint"/>
    </select>

    <select id="selectCurrentChildDepartmentsByMasterId" parameterType="map" resultMap="departmentResultMap">
        select *, #{currentDate} as `current_date` from `department` where `master_id` = #{masterId} and
         <include refid="org.complitex.flexbuh.common.entity.TemporalDomainObject.currentDateConstraint"/>
    </select>

    <select id="selectCurrentDepartments" parameterType="map" resultMap="departmentResultMap">
        select *, #{currentDate} as `current_date` from `department` where
        <include refid="org.complitex.flexbuh.common.entity.TemporalDomainObject.currentDateConstraint"/>
        <include refid="filter_order_limit"/>
    </select>

    <select id="selectCurrentDepartmentsCount" parameterType="map" resultMap="departmentResultMap">
        select *, #{currentDate} as `current_date` from `department` where
        <include refid="org.complitex.flexbuh.common.entity.TemporalDomainObject.currentDateConstraint"/>
        <include refid="filter"/>
    </select>

</mapper>