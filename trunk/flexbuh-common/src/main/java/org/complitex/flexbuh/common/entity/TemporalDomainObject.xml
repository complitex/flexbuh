<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.complitex.flexbuh.common.entity.TemporalDomainObject">
    <resultMap id="temporalDomainObjectResultMap" type="org.complitex.flexbuh.common.entity.TemporalDomainObject">
        <id column="id" property="id"/>
        <id property="version" column="version"/>

        <result property="deleted" column="deleted"/>
        <result property="entryIntoForceDate" column="entry_into_force_date"/>
        <result property="completionDate" column="completion_date"/>
    </resultMap>

    <sql id="columns"> `id`, `version`, `entry_into_force_date`, `completion_date` </sql>

    <sql id="properties"> #{id}, #{version}, #{entryIntoForceDate}, #{completionDate} </sql>

    <sql id="updateNullCompletionDate">set `completion_date` = #{entryIntoForceDate} where
        `id` = #{id} and `version` = #{version} and `completion_date` is null
    </sql>

    <sql id="updateCompletionDate">set `completion_date` = #{completionDate} where
        `id` = #{id} and `version` = #{version}
    </sql>

   <sql id="delete">set `completion_date` = #{completionDate}, `deleted` = true where
        `id` = #{id} and `completion_date` is null
    </sql>

    <sql id="generateId">
        IFNULL(MAX(`id`)+1, 1)
    </sql>

    <sql id="generateVersion">
        IFNULL(MAX(`version`)+1, 1)
    </sql>

    <sql id="currentDateConstraint">
        #{currentDate} >= `entry_into_force_date` and (`completion_date` > #{currentDate} or `completion_date` is null)
    </sql>

    <sql id="inactiveConstraint">
        `deleted` is true
    </sql>

    <sql id="dateConstraint">
        (#{currentDate} >= `entry_into_force_date` and (`completion_date` > #{currentDate} or `completion_date` is null) or
        `deleted` is true or
        `entry_into_force_date` > #{currentDate} and `version` = 1)
    </sql>

    <sql id="temporalDomainObjectHistoryFilter">
        <if test="filter.beginDateRange != null">and `completion_date` > #{filter.beginDateRange}</if>
        <if test="filter.endDateRange != null"> and #{filter.endDateRange} > `entry_into_force_date`</if>
        order by `entry_into_force_date`
        limit #{filter.first}, #{filter.count}
    </sql>

    <sql id="temporalDomainObjectHistoryFilterCount">
        <if test="filter.beginDateRange != null">and `completion_date` > #{filter.beginDateRange}</if>
        <if test="filter.endDateRange != null"> and #{filter.endDateRange} > `entry_into_force_date`</if>
    </sql>

</mapper>