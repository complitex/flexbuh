<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.complitex.flexbuh.common.service.organization.OrganizationBean">
    <resultMap id="organizationResultMap" type="org.complitex.flexbuh.common.entity.organization.Organization"
            extends="org.complitex.flexbuh.common.entity.TemporalDomainObject.temporalDomainObjectResultMap">

        <result column="name" property="name"/>
        <result column="type" property="type"/>

        <result column="phone" property="phone"/>
        <result column="fax" property="fax"/>
        <result column="email" property="email"/>
        <result column="http_address" property="httpAddress"/>
        
        <association property="physicalAddress" javaType="org.complitex.flexbuh.common.entity.Address">
            <result column="physical_address_zip_code" property="zipCode"/>
            <result column="physical_address_country" property="country"/>
            <result column="physical_address_region" property="region" />
            <result column="physical_address_area" property="area" />
            <result column="physical_address_city" property="city" />
            <result column="physical_address_city_type" property="cityType" />
            <result column="physical_address_street" property="street" />
            <result column="physical_address_street_type" property="streetType" />
            <result column="physical_address_building" property="building" />
            <result column="physical_address_apartment" property="apartment" />
        </association>

        <association property="juridicalAddress" javaType="org.complitex.flexbuh.common.entity.Address">
            <result column="juridical_address_zip_code" property="zipCode"/>
            <result column="juridical_address_country" property="country"/>
            <result column="juridical_address_region" property="region" />
            <result column="juridical_address_area" property="area" />
            <result column="juridical_address_city" property="city" />
            <result column="juridical_address_city_type" property="cityType" />
            <result column="juridical_address_street" property="street" />
            <result column="juridical_address_street_type" property="streetType" />
            <result column="juridical_address_building" property="building" />
            <result column="juridical_address_apartment" property="apartment" />
        </association>

    </resultMap>

    <sql id="columns">
        <include refid="org.complitex.flexbuh.common.entity.TemporalDomainObject.columns"/>,
        `name`, `type`, `phone`, `fax`, `email`, `http_address`,
        `physical_address_zip_code`, `physical_address_country`, `physical_address_region`, `physical_address_area`,
        `physical_address_city`, `physical_address_city_type`, `physical_address_street`, `physical_address_street_type`,
        `physical_address_building`, `physical_address_apartment`,
        `juridical_address_zip_code`, `juridical_address_country`, `juridical_address_region`, `juridical_address_area`,
        `juridical_address_city`, `juridical_address_city_type`, `juridical_address_street`, `juridical_address_street_type`,
        `juridical_address_building`, `juridical_address_apartment`
    </sql>

    <sql id="properties">
        <include refid="org.complitex.flexbuh.common.entity.TemporalDomainObject.properties"/>,
         #{name}, #{type}, #{phone}, #{fax}, #{email}, #{httpAddress},
         #{physicalAddress.zipCode}, #{physicalAddress.country}, #{physicalAddress.region}, #{physicalAddress.area},
         #{physicalAddress.city}, #{physicalAddress.cityType}, #{physicalAddress.street}, #{physicalAddress.streetType},
         #{physicalAddress.building}, #{physicalAddress.apartment},
         #{juridicalAddress.zipCode}, #{juridicalAddress.country}, #{juridicalAddress.region}, #{juridicalAddress.area},
         #{juridicalAddress.city}, #{juridicalAddress.cityType}, #{juridicalAddress.street}, #{juridicalAddress.streetType},
         #{juridicalAddress.building}, #{juridicalAddress.apartment}
    </sql>

    <sql id="physicalAddress">
        concat_ws(', ',
        `physical_address_zip_code`, `physical_address_country`, `physical_address_region`, `physical_address_area`,
        concat_ws(' ', `physical_address_city_type`, `physical_address_city`),
        concat_ws(' ', `physical_address_street_type`, `physical_address_street`),
        `physical_address_building`, `physical_address_apartment`)
    </sql>

    <sql id="juridicalAddress">
        concat_ws(', ',
        `juridical_address_zip_code`, `juridical_address_country`, `juridical_address_region`, `juridical_address_area`,
        concat_ws(' ', `juridical_address_city_type`, `juridical_address_city`),
        concat_ws(' ', `juridical_address_street_type`, `juridical_address_street`),
        `juridical_address_building`, `juridical_address_apartment`)
    </sql>

    <sql id="filter">
        <if test="filter != null">
            <if test="filter.name != null"> and `name` like concat('%', #{filter.name}, '%')</if>
            <if test="filter.type != null"> and `type` like #{filter.type}</if>
            <if test="filter.phone != null"> and `phone` like concat('%', #{filter.phone}, '%')</if>
            <if test="filter.email != null"> and `email` like concat('%', #{filter.email}, '%')</if>
            <if test="filter.organizationIds != null"> and `id` in (
                <foreach collection="filter.organizationIds" separator="," item="item">#{item}</foreach>)
            </if>
            <if test="filter.physicalAddress != null">
                and <include refid="physicalAddress"/> like concat('%', #{filter.physicalAddress}, '%')
            </if>
            <if test="filter.juridicalAddress != null">
                and <include refid="juridicalAddress"/> like concat('%', #{filter.juridicalAddress}, '%')
            </if>
        </if>
    </sql>

    <sql id="filter_order_limit">
        <if test="filter != null">
            <if test="filter.name != null"> and `name` like concat('%', #{filter.name}, '%')</if>
            <if test="filter.type != null"> and `type` like #{filter.type}</if>
            <if test="filter.phone != null"> and `phone` like concat('%', #{filter.phone}, '%')</if>
            <if test="filter.email != null"> and `email` like concat('%', #{filter.email}, '%')</if>
            <if test="filter.physicalAddress != null">
                and `physical_address` like concat('%', #{filter.physicalAddress}, '%')
            </if>
            <if test="filter.juridicalAddress != null">
                and `juridical_address` like concat('%', #{filter.juridicalAddress}, '%')
            </if>
            order by ${filter.sortProperty}
            limit #{filter.first}, #{filter.count}
        </if>
    </sql>

    <insert id="insertOrganization"
            parameterType="org.complitex.flexbuh.common.entity.organization.Organization"
            keyProperty="id" useGeneratedKeys="true">

        <selectKey keyProperty="id" order="BEFORE" resultType="long">
            <include refid="org.complitex.flexbuh.common.entity.TemporalDomainObject.generateId"/>
        </selectKey>

        insert into `organization` (
        <include refid="columns"/>
        )
        values (
        <include refid="properties"/>
        )
    </insert>

    <insert id="updateOrganization" parameterType="org.complitex.flexbuh.common.entity.organization.Organization">

        <selectKey keyProperty="version" order="BEFORE" resultType="long">
            <include refid="org.complitex.flexbuh.common.entity.TemporalDomainObject.generateVersion"/>
        </selectKey>

        insert into `organization` (
        <include refid="columns"/>
        )
        values (
        <include refid="properties"/>
        )
    </insert>

    <update id="updateOrganizationNullCompletionDate"
            parameterType="org.complitex.flexbuh.personnel.entity.Department">

        update `department` <include refid="org.complitex.flexbuh.common.entity.TemporalDomainObject.updateNullCompletionDate"/>

    </update>

    <update id="updateOrganizationCompletionDate"
            parameterType="org.complitex.flexbuh.personnel.entity.Department">

        update `department` <include refid="org.complitex.flexbuh.common.entity.TemporalDomainObject.updateCompletionDate"/>

    </update>

    <select id="selectCurrentOrganizationById" parameterType="map" resultMap="organizationResultMap">
        select * from `organization` where `id` = #{id} and
        <include refid="org.complitex.flexbuh.common.entity.TemporalDomainObject.currentDateConstraint"/>
    </select>

    <select id="selectCurrentOrganizations" parameterType="map" resultMap="organizationResultMap">
        select *,
        <include refid="physicalAddress"/> as `physical_address`,
        <include refid="juridicalAddress"/> as `juridical_address`
        from `organization` where
        <include refid="org.complitex.flexbuh.common.entity.TemporalDomainObject.currentDateConstraint"/>
        <include refid="filter_order_limit"/>
    </select>

    <select id="selectCurrentOrganizationsCount" parameterType="map" resultType="int">
        select count(distinct id) from `organization` where
        <include refid="org.complitex.flexbuh.common.entity.TemporalDomainObject.currentDateConstraint"/>
        <include refid="filter"/>
    </select>

</mapper>