<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.complitex.flexbuh.common.service.user.UserBean">
    <resultMap id="userResultMap" type="org.complitex.flexbuh.common.entity.user.User">
		<id column="id" property="id"/>
        <result column="login" property="login"/>
        <result column="session_id" property="sessionId"/>

        <result column="first_name" property="firstName"/>
        <result column="middle_name" property="middleName"/>
        <result column="last_name" property="lastName"/>
        <result column="birthday" property="birthday"/>
        <result column="email" property="email"/>
        <result column="phone" property="phone"/>
        <result column="zip_code" property="zipCode"/>
        <result column="country" property="country"/>
        <result column="region" property="region" />
        <result column="area" property="area" />
        <result column="city" property="city" />
        <result column="city_type" property="cityType" />
        <result column="street" property="street" />
        <result column="street_type" property="streetType" />
        <result column="building" property="building" />
        <result column="apartment" property="apartment" />
        <result column="organization_name" property="organizationName"/>
        <result column="organization_phone" property="organizationPhone"/>
        <result column="organization_department" property="organizationDepartment"/>
        <result column="organization_post" property="organizationPost"/>
        <result column="organization_zip_code" property="organizationZipCode"/>
        <result column="organization_country" property="organizationCountry"/>
        <result column="organization_region" property="organizationRegion" />
        <result column="organization_area" property="organizationArea" />
        <result column="organization_city" property="organizationCity" />
        <result column="organization_city_type" property="organizationCityType" />
        <result column="organization_street" property="organizationStreet" />
        <result column="organization_street_type" property="organizationStreetType" />
        <result column="organization_building" property="organizationBuilding" />
        <result column="organization_apartment" property="organizationApartment" />

        <collection property="roles" ofType="string">
            <result column="group_name"/>
        </collection>
    </resultMap>

    <sql id="userFilter">
        from `user` u
        <if test="role != null">
            left join `usergroup` gc on u.`login` = gc.`login`
        </if>

        <where>
            <if test="login != null">u.login like concat('%', #{login}, '%')</if>
            <if test="firstName != null">and u.first_name like concat('%', #{firstName}, '%')</if>
            <if test="middleName != null">and u.middle_name like concat('%', #{middleName}, '%')</if>
            <if test="lastName != null">and u.last_name like concat('%', #{lastName}, '%')</if>
            <if test="role != null">and gc.`group_name` in (
              <foreach collection="roles" separator="," item="item">#{item}</foreach>)
            </if>
        </where>

        <if test="sortProperty == 'login'">
            order by u.`login` <choose><when test="ascending">asc</when><otherwise>desc</otherwise></choose>
        </if>
    </sql>

    <insert id="insertUser" parameterType="org.complitex.flexbuh.common.entity.user.User" keyProperty="id" useGeneratedKeys="true">
        insert into `user` (`login`, `password`, `session_id`, `first_name`, `middle_name`, `last_name`, `birthday`,
        `email`, `phone`, `zip_code`, `country`, `region`, `area`, `city`, `city_type`, `street`, `street_type`, `building`, `apartment`,
         `organization_name`, `organization_phone`, `organization_zip_code`,
         `organization_country`, `organization_region`, `organization_area`, `organization_city`, `organization_city_type`,
         `organization_street`, `organization_street_type`, `organization_building`, `organization_apartment`)
        values (#{login}, #{password}, #{sessionId}, #{firstName}, #{middleName}, #{lastName}, #{birthday},
        #{email}, #{phone}, #{zipCode}, #{country}, #{region}, #{area}, #{city}, #{cityType}, #{street}, #{streetType}, #{building}, #{apartment},
        #{organizationName}, #{organizationPhone}, #{organizationZipCode},
        #{organizationCountry}, #{organizationRegion}, #{organizationArea}, #{organizationCity}, #{organizationCityType},
        #{organizationStreet}, #{organizationStreetType}, #{organizationBuilding}, #{organizationApartment})
    </insert>

    <update id="updateUser" parameterType="org.complitex.flexbuh.common.entity.user.User">
        update `user`
        <set>
            <if test="password != null"> `password` = #{password},</if>
            <if test="sessionId != null"> `session_id` = #{sessionId},</if>
            `first_name` = #{firstName}, `middle_name` = #{middleName}, `last_name` = #{lastName}, `birthday` = #{birthday},
            `email` = #{email}, `phone` = #{phone}, `zip_code` = #{zipCode}, `country` = #{country}, `region` = #{region},
            `city` = #{city}, `city_type` = #{cityType}, `street` = #{street}, `street_type` = #{streetType},
            `building` = #{building}, `apartment` = #{apartment},
            `organization_name` = #{organizationName}, `organization_phone` = #{organizationPhone},
            `organization_zip_code` = #{organizationZipCode}, `organization_country` = #{organizationCountry},
            `organization_region` = #{organizationRegion}, `organization_area` = #{organizationArea},
            `organization_city` = #{organizationCity}, `organization_city_type` = #{organizationCityType},
            `organization_street` = #{organizationStreet}, `organization_street_type` = #{organizationStreetType},
            `organization_building` = #{organizationBuilding}, `organization_apartment` = #{organizationApartment}
        </set>
        where id = #{id}
    </update>

    <select id="selectUsers" resultMap="userResultMap" parameterType="org.complitex.flexbuh.common.service.user.UserFilter">
        select uc.*, gc.`group_name` as `group_name`
        from
        (select u.*
        <include refid="userFilter"/>
        limit #{first}, #{count}
        ) as uc
        left join `usergroup` gc on uc.`login` = gc.`login`
    </select>

    <select id="selectUsersCount" resultType="int" parameterType="org.complitex.flexbuh.common.service.user.UserFilter">
        select count(distinct u.id)
        <include refid="userFilter"/>
    </select>

    <select id="selectUserBySessionId" parameterType="long" resultMap="userResultMap">
        select u.*, gc.`group_name` as `group_name` from `user` u
        left join `usergroup` gc on u.`login` = gc.`login`
        where u.`session_id` = #{sessionId}
    </select>

    <select id="selectUserById" parameterType="long" resultMap="userResultMap">
        select u.*,
               gc.`group_name` as `group_name`
        from `user` u
        left join `usergroup` gc on u.`login` = gc.`login`
        where u.`id` = #{id}
        order by gc.`group_name`
    </select>

    <select id="selectUserByLogin" parameterType="string" resultMap="userResultMap">
        select u.*,
               gc.`group_name` as `group_name`
        from `user` u
        left join `usergroup` gc on u.`login` = gc.`login`
        where u.`login` = #{login}
        order by gc.`group_name`
    </select>

    <select id="isLoginExist" parameterType="string" resultType="boolean">
        select count(*) > 0 from `user` where `login` = #{name}
    </select>

    <!--User Group-->
    <insert id="insertUserRole" parameterType="map">
        insert into `usergroup` (`login`, `group_name`) values (#{login}, #{role})
    </insert>

    <delete id="deleteUserRole" parameterType="map">
        delete from `usergroup` where `login` = #{login} and `group_name` = #{role}
    </delete>

</mapper>