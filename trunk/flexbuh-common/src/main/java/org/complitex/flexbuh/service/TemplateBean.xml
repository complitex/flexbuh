<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.complitex.flexbuh.service.TemplateBean">
    <resultMap id="templateXSLResultMap" type="org.complitex.flexbuh.entity.TemplateXSL">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="data" property="data"/>
        <result column="upload_date" property="uploadData"/>
    </resultMap>

    <resultMap id="templateXSDResultMap" type="org.complitex.flexbuh.entity.TemplateXSD">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="data" property="data"/>
		<result column="upload_date" property="uploadData"/>
    </resultMap>

    <resultMap id="templateControlResultMap" type="org.complitex.flexbuh.entity.TemplateControl">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="data" property="data"/>
		<result column="upload_date" property="uploadData"/>
    </resultMap>

	<resultMap id="templateFOResultMap" type="org.complitex.flexbuh.entity.TemplateFO">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="data" property="data"/>
		<result column="upload_date" property="uploadData"/>
    </resultMap>

    <insert id="insertTemplate" parameterType="org.complitex.flexbuh.entity.AbstractTemplate">
        insert into `${table}` (`name`, `data`, `upload_date`) values (#{name}, #{data}, #{uploadDate})
    </insert>

    <select id="selectTemplateXSL" parameterType="string" resultMap="templateXSLResultMap">
        select * from `template_xsl` where `name` = #{name}
    </select>

    <select id="selectTemplateXSD" parameterType="string" resultMap="templateXSDResultMap">
        select * from `template_xsd` where `name` = #{name}
    </select>

    <select id="selectTemplateControl" resultType="string" resultMap="templateControlResultMap">
        select * from `template_control` where `name` = #{name}
    </select>

    <select id="selectTemplateFO" resultType="string" resultMap="templateFOResultMap">
        select * from `template_fo` where `name` = #{name}
    </select>

    <select id="selectTemplateXSLNames" resultType="string">
        select `name` from `template_xsl` where `name` like 'J%'
    </select>

	<select id="isExist" resultType="long">
		select count(id) from `${table}` where `name` = #{name}
	</select>
</mapper>