package org.complitex.flexbuh.document.entity;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import java.io.Serializable;

/**
 * @author Anatoly A. Ivanov java@inheaven.ru
 *         Date: 07.09.11 15:11
 */
@XmlType
@XmlAccessorType(value = XmlAccessType.FIELD)
public class DeclarationHead implements Serializable {
    @XmlElement(name = "TIN")
    private String tin; // код плательщика

    @XmlElement(name = "C_DOC")
    private String cDoc; // код документа

    @XmlElement(name = "C_DOC_SUB")
    private String cDocSub; // подтип документа

    @XmlElement(name = "C_DOC_VER")
    private Integer cDocVer; // номер версии документа

    @XmlElement(name = "C_DOC_TYPE")
    private Integer cDocType; // № исправительной документа (0 - основной (первого поданного))

    @XmlElement(name = "C_DOC_CNT")
    private Integer cDocCnt; // № однотипных документов в периоде

    @XmlElement(name = "C_REG")
    private Integer cReg; // код области

    @XmlElement(name = "C_RAJ")
    private Integer cRaj; // код административного района

    @XmlElement(name = "PERIOD_MONTH")
    private Integer periodMonth = 1; // отчетный месяц (последний в отчетном периоде)

    @XmlElement(name = "PERIOD_TYPE")
    private Integer periodType = 1; // тип периода

    @XmlElement(name = "PERIOD_YEAR")
    private Integer periodYear = 2011; // отчетный год

    @XmlElement(name = "C_STI_ORIG")
    private String cStiOrig; // Код ГНИ, в которую подается оригинал документа

    @XmlElement(name = "C_DOC_STAN")
    private Integer cDocStan; // законодательство

    @XmlElement(name = "D_FILL")
    private String dFill; // дата заполненные документы плательщиком

    @XmlElement(name = "SOFTWARE")
    private String software; // сигнатура программы

    public DeclarationHead() {
    }

    /**
     * Значением элемента является код ЕГРПОУ для юридических лиц и идентификационный номер ГРФЛ для физических лиц.
     * Целое число (от 5 до 10 знаков) или символьное значение (формата серия + номер паспорта)
     * @return код плательщика
     */
    public String getTin() {
        return tin;
    }

    /**
     * Значением элемента является код ЕГРПОУ для юридических лиц и идентификационный номер ГРФЛ для физических лиц.
     * Целое число (от 5 до 10 знаков) или символьное значение (формата серия + номер паспорта)
     * @param tin код плательщика
     */
    public void setTin(String tin) {
        this.tin = tin;
    }

    /**
     * Соответствует значению элемента C_DOC из справочника отчетных документов (SPR_DOC.XML).
     * Фиксированное значение: Для юридических лиц J12, для физических лиц F12
     * @return код документа
     */
    public String getCDoc() {
        return cDoc;
    }

    /**
     * Соответствует значению элемента C_DOC из справочника отчетных документов (SPR_DOC.XML).
     * Фиксированное значение: Для юридических лиц J12, для физических лиц F12
     * @param cDoc код документа
     */
    public void setCDoc(String cDoc) {
        this.cDoc = cDoc;
    }

    /**
     * Соответствует значению элемента C_DOC_SUB из справочника отчетных документов (SPR_DOC.XML).
     * Фиксированное значение 015
     * @return подтип документа
     */
    public String getCDocSub() {
        return cDocSub;
    }

    /**
     * Соответствует значению элемента C_DOC_SUB из справочника отчетных документов (SPR_DOC.XML).
     * Фиксированное значение 015
     * @param cDocSub подтип документа
     */
    public void setCDocSub(String cDocSub) {
        this.cDocSub = cDocSub;
    }

    /**
     * Соответствует значению элемента C_DOC_VER из справочника отчетных документов (SPR_DOC.XML).
     * Фиксированное значение для действующей формы
     * @return номер версии документа
     */
    public Integer getCDocVer() {
        return cDocVer;
    }

    /**
     * Соответствует значению элемента C_DOC_VER из справочника отчетных документов (SPR_DOC.XML).
     * Фиксированное значение для действующей формы
     * @param cDocVer номер версии документа
     */
    public void setCDocVer(Integer cDocVer) {
        this.cDocVer = cDocVer;
    }

    /**
     * Для первого поданного в отчетном периоде документа значения данного элемента равен 0, каждый следующий исправительный документ
     * этого же типа в данном отчетном периоде в счет этого элемента больше на единицу.
     * Признак исправительного документа, для основного (базового) документа: 0, 1,2, ... для всех последующих, что является исправительными
     * в отношении базового документа
     * @return № исправительной документа (0 - основной (первого поданного))
     */
    public Integer getCDocType() {
        return cDocType;
    }

    /**
     * Для первого поданного в отчетном периоде документа значения данного элемента равен 0, каждый следующий исправительный документ
     * этого же типа в данном отчетном периоде в счет этого элемента больше на единицу.
     * Признак исправительного документа, для основного (базового) документа: 0, 1,2, ... для всех последующих, что является исправительными
     * в отношении базового документа
     * @param cDocType № исправительной документа (0 - основной (первого поданного))
     */
    public void setCDocType(Integer cDocType) {
        this.cDocType = cDocType;
    }

    /**
     * Если в одном отчетном периоде подается несколько однотипных документов, то значение данного элемента содержит порядковый номер
     * для каждого документа в данном периоде. Первый документ имеет номер 1. При формировании электронного документа, является уточненным
     * к поданному ранее (значение элемента C_DOC_TYPE> 0), нумерация однотипных документов в периоде (значение элемента C_DOC_CNT) должна
     * оставаться неизменной относительно нумерации документов, уточняются.
     * Признак, проставляется для документов, которые подаются несколько раз за период, в счет 1,2, ..., если документ подается 1 раз
     * за период имеет значение 1, если данный документ уточняется его С_DOC_CNT сохраняется
     * @return № однотипных документов в периоде
     */
    public Integer getCDocCnt() {
        return cDocCnt;
    }

    /**
     * Если в одном отчетном периоде подается несколько однотипных документов, то значение данного элемента содержит порядковый номер
     * для каждого документа в данном периоде. Первый документ имеет номер 1. При формировании электронного документа, является уточненным
     * к поданному ранее (значение элемента C_DOC_TYPE> 0), нумерация однотипных документов в периоде (значение элемента C_DOC_CNT) должна
     * оставаться неизменной относительно нумерации документов, уточняются.
     * Признак, проставляется для документов, которые подаются несколько раз за период, в счет 1,2, ..., если документ подается 1 раз
     * за период имеет значение 1, если данный документ уточняется его С_DOC_CNT сохраняется
     * @param cDocCnt № однотипных документов в периоде
     */
    public void setCDocCnt(Integer cDocCnt) {
        this.cDocCnt = cDocCnt;
    }

    /**
     * Значением этого элемента является код области, на территории которой расположена налоговая инспекция (или отделение), в которую
     * подается документ. Код области заполняется согласно справочнику государственных налоговых инспекций (SPR_STI.XML) и соответствует
     * значению элемента C_REG.
     * Код области ГНИ, в которую подается налоговая отчетность
     * @return код области
     */
    public Integer getCReg() {
        return cReg;
    }

    /**
     * Значением этого элемента является код области, на территории которой расположена налоговая инспекция (или отделение), в которую
     * подается документ. Код области заполняется согласно справочнику государственных налоговых инспекций (SPR_STI.XML) и соответствует
     * значению элемента C_REG.
     * Код области ГНИ, в которую подается налоговая отчетность
     * @param cReg код области
     */
    public void setCReg(Integer cReg) {
        this.cReg = cReg;
    }

    /**
     * Значением этого элемента является код административного района, на территории которой расположена налоговая инспекция
     * (или отделение), в которую подается документ. Код административного района заполняется согласно справочнику государственных
     * налоговых инспекций (SPR_STI.XML) и соответствует значению элемента C_RAJ.
     * Код административного района ГНИ
     * @return код административного района
     */
    public Integer getCRaj() {
        return cRaj;
    }

    /**
     * Значением этого элемента является код административного района, на территории которой расположена налоговая инспекция
     * (или отделение), в которую подается документ. Код административного района заполняется согласно справочнику государственных
     * налоговых инспекций (SPR_STI.XML) и соответствует значению элемента C_RAJ.
     * Код административного района ГНИ
     * @param cRaj код административного района
     */
    public void setCRaj(Integer cRaj) {
        this.cRaj = cRaj;
    }

    /**
     * Отчетным месяцем считается последний месяц в отчетном периоде.
     * Месяц, за который подается отчетность, (для 1,2,3,4 кварталов это 3,6,9,12 месяц соответственно, для года - 12)
     * @return отчетный месяц (последний в отчетном периоде)
     */
    public Integer getPeriodMonth() {
        return periodMonth;
    }

    /**
     * Отчетным месяцем считается последний месяц в отчетном периоде.
     * Месяц, за который подается отчетность, (для 1,2,3,4 кварталов это 3,6,9,12 месяц соответственно, для года - 12)
     * @param periodMonth отчетный месяц (последний в отчетном периоде)
     */
    public void setPeriodMonth(Integer periodMonth) {
        this.periodMonth = periodMonth;
    }

    /**
     * Фиксированное значение: 1-месяц, 2-квартал, 3-полугодие, 4-9 месяцев, 5-год
     * @return тип периода
     */
    public Integer getPeriodType() {
        return periodType;
    }

    /**
     * Фиксированное значение: 1-месяц, 2-квартал, 3-полугодие, 4-9 месяцев, 5-год
     * @param periodType тип периода
     */
    public void setPeriodType(Integer periodType) {
        this.periodType = periodType;
    }

    /**
     * Год, за который подается отчетность
     * @return отчетный год
     */
    public Integer getPeriodYear() {
        return periodYear;
    }

    /**
     * Год, за который подается отчетность
     * @param periodYear отчетный год
     */
    public void setPeriodYear(Integer periodYear) {
        this.periodYear = periodYear;
    }

    /**
     * Код ГНИ выбирается из справочника инспекций, является числом, которое соответствует формуле:
     * значение элемента C_REG * 100 + значение элемента C_RAJ.
     * @return Код ГНИ, в которую подается оригинал документа
     */
    public String getCStiOrig() {
        return cStiOrig;
    }

    /**
     * Код ГНИ выбирается из справочника инспекций, является числом, которое соответствует формуле:
     * значение элемента C_REG * 100 + значение элемента C_RAJ.
     * @param cStiOrig Код ГНИ, в которую подается оригинал документа
     */
    public void setCStiOrig(String cStiOrig) {
        this.cStiOrig = cStiOrig;
    }

    /**
     * Принимает фиксированные значения: 1-отчетный документ, 2-новый отчетный документ, 3-уточняющий документ
     * @return законодательство
     */
    public Integer getCDocStan() {
        return cDocStan;
    }

    /**
     * Принимает фиксированные значения: 1-отчетный документ, 2-новый отчетный документ, 3-уточняющий документ
     * @param cDocStan законодательство
     */
    public void setCDocStan(Integer cDocStan) {
        this.cDocStan = cDocStan;
    }

    /**
     * Формат ддммрррр
     * @return дата заполненные документы плательщиком
     */
    public String getDFill() {
        return dFill;
    }

    /**
     * Формат ддммрррр
     * @param dFill дата заполненные документы плательщиком
     */
    public void setDFill(String dFill) {
        this.dFill = dFill;
    }

    /**
     * Заполняется только программным обеспечением, которое сертифицировано ГНА Украины для формирования отчетности в электронном виде
     * @return сигнатура программы
     */
    public String getSoftware() {
        return software;
    }

    /**
     * Заполняется только программным обеспечением, которое сертифицировано ГНА Украины для формирования отчетности в электронном виде
     * @param software сигнатура программы
     */
    public void setSoftware(String software) {
        this.software = software;
    }
}
