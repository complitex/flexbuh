<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.complitex.flexbuh.document.service.DeclarationBean">
    <resultMap id="declarationResultMap" type="org.complitex.flexbuh.document.entity.Declaration">
        <id column="id" property="id"/>
        <result column="session_id" property="sessionId"/>
        <result column="parent_id" property="parentId"/>
        <result column="person_profile_id" property="personProfileId"/>
        <result column="name" property="name"/>
        <result column="tin" property="head.tin"/>
        <result column="c_doc" property="head.cDoc"/>
        <result column="c_doc_sub" property="head.cDocSub"/>
        <result column="c_doc_ver" property="head.cDocVer"/>
        <result column="c_doc_type" property="head.cDocType"/>
        <result column="c_doc_cnt" property="head.cDocCnt"/>
        <result column="c_reg" property="head.cReg"/>
        <result column="c_raj" property="head.cRaj"/>
        <result column="period_month" property="head.periodMonth"/>
        <result column="period_type" property="head.periodType"/>
        <result column="period_year" property="head.periodYear"/>
        <result column="c_sti_orig" property="head.cStiOrig"/>
        <result column="c_doc_stan" property="head.cDocStan"/>
        <result column="d_fill" property="head.dFill"/>
        <result column="software" property="head.software"/>
        <result column="date" property="date"/>
        <result column="validated" property="validated"/>

        <association property="possibleParentId" column="id" select="selectPossibleDeclarationParentId"/>

        <collection property="declarationValues" column="id" ofType="org.complitex.flexbuh.document.entity.DeclarationValue"
                    select="selectDeclarationValues"/>

        <collection property="linkedDeclarations" column="id" ofType="org.complitex.flexbuh.document.entity.LinkedDeclaration"
                    select="selectLinkedDeclaration"/>
    </resultMap>

    <resultMap id="linkedDeclarationResultMap" type="org.complitex.flexbuh.document.entity.LinkedDeclaration">
        <id column="id" property="id"/>
        <result column="num" property="num"/>
        <result column="type" property="type"/>
        <result column="filename" property="filename"/>

        <association property="declaration" resultMap="declarationResultMap"/>
    </resultMap>
    
    <resultMap id="declarationValueResultMap" type="org.complitex.flexbuh.document.entity.DeclarationValue">
        <id column="id" property="id"/>
        <result column="declaration_id" property="declarationId"/>
        <result column="row_num" property="rowNum"/>
        <result column="name" property="name"/>
        <result column="value" property="value"/>            
    </resultMap>

    <select id="selectDeclaration" resultMap="declarationResultMap" parameterType="long">
        select de.*, do.`name_uk` as `name` from `declaration` de
          left join `document` do on (de.`c_doc` = do.`c_doc` and de.`c_doc_sub` = do.`c_doc_sub`)
        where de.`id` = #{id}
    </select>

    <select id="selectLinkedDeclaration" resultMap="linkedDeclarationResultMap" parameterType="long">
        select de.*, do.`name_uk` as `name` from `declaration` de
          left join `document` do on (de.`c_doc` = do.`c_doc` and de.`c_doc_sub` = do.`c_doc_sub`)
        where `parent_id` = #{parentId}
    </select>

    <select id="selectDeclarationValues" resultMap="declarationValueResultMap" parameterType="long">
        select * from `declaration_value` where `declaration_id` = #{declaration_id}
    </select>

    <insert id="insertDeclaration" parameterType="org.complitex.flexbuh.document.entity.Declaration"
            keyProperty="id" useGeneratedKeys="true">
        insert into `declaration` (`parent_id`, `session_id`, `person_profile_id`, `tin`, `c_doc`, `c_doc_sub`,
          `c_doc_ver`, `c_doc_type`, `c_doc_cnt`, `c_reg`, `c_raj`, `period_month`, `period_type`, `period_year`,
          `c_sti_orig`, `c_doc_stan`, `d_fill`, `software`, `date`, `validated`)
        values (#{parentId}, #{sessionId}, #{personProfileId}, #{head.tin}, #{head.cDoc}, #{head.cDocSub},
          #{head.cDocVer}, #{head.cDocType}, #{head.cDocCnt}, #{head.cReg}, #{head.cRaj}, #{head.periodMonth},
          #{head.periodType}, #{head.periodYear}, #{head.cStiOrig}, #{head.cDocStan}, #{head.dFill}, #{head.software},
          #{date}, #{validated})
    </insert>

    <insert id="insertDeclarationValue" parameterType="org.complitex.flexbuh.document.entity.DeclarationValue">
        insert into `declaration_value` (`declaration_id`, `row_num`, `name`, `value`)
          values (#{declarationId}, #{rowNum}, #{name}, #{value})
    </insert>

    <sql id="selectDeclarationsFromWhere">
        from `declaration` de
             left join `document` do on (de.`c_doc` = do.`c_doc` and de.`c_doc_sub` = do.`c_doc_sub`)
             left join `person_profile` pp on (de.`person_profile_id` = pp.`id`)
         <where>
             <if test="name != null">do.`name_uk` like  concat('%', #{name}, '%')</if>
             <if test="periodMonth != null">and `period_month` = #{periodMonth}</if>
             <if test="periodType != null">and `period_type` = #{periodType}</if>
             <if test="periodYear != null">and `period_year` = #{periodYear}</if>
             <if test="date != null">and DATE(`date`) = DATE(#{date})</if>
             <if test="parentId != null">and `parent_id` = #{parentId}</if>
             <if test="parentId == null">and `parent_id` is null</if>
             and de.`session_id` = #{sessionId}
             and (pp.`selected` = true or (de.`person_profile_id` is null
                    and (select count(*) = 0 from `person_profile` where `session_id` = #{sessionId} and `selected` = true)))
         </where>
        <!-- todo performance select-->
    </sql>

    <select id="selectDeclarations" resultMap="declarationResultMap" parameterType="org.complitex.flexbuh.document.entity.DeclarationFilter">
        select de.*, do.`name_uk` as `name` <include refid = "selectDeclarationsFromWhere"/>
        <choose>
            <when test="sortProperty == 'name'">order by do.`name_uk`</when>
            <when test="sortProperty != null and sortProperty != 'name'">order by de.${sortProperty}</when>
            <otherwise>order by de.`id`</otherwise>
        </choose>
        <choose><when test="ascending">asc</when><otherwise>desc</otherwise></choose>
        limit #{first}, #{count}
    </select>

    <select id="selectDeclarationsCount" resultType="int" parameterType="org.complitex.flexbuh.document.entity.DeclarationFilter">
        select count(*) <include refid = "selectDeclarationsFromWhere"/>
    </select>

    <delete id="deleteDeclaration" parameterType="long">
        delete from `declaration` where `id` = #{id}
    </delete>

    <delete id="deleteDeclarationValue" parameterType="long">
        delete from `declaration_value` where `id` = #{id}
    </delete>

    <update id="updateDeclaration" parameterType="org.complitex.flexbuh.document.entity.Declaration">
        update `declaration` set `session_id` = #{sessionId}, `parent_id` = #{parentId},
          `person_profile_id` = #{personProfileId}, `tin` = #{head.tin}, `c_doc` = #{head.cDoc},
          `c_doc_sub` = #{head.cDocSub}, `c_doc_ver` = #{head.cDocVer}, `c_doc_type` = #{head.cDocType},
          `c_doc_cnt` = #{head.cDocCnt}, `c_reg` = #{head.cReg}, `c_raj` = #{head.cRaj},
          `period_month` = #{head.periodMonth}, `period_type` = #{head.periodType}, `period_year` = #{head.periodYear},
          `c_sti_orig` = #{head.cStiOrig}, `c_doc_stan` = #{head.cDocStan}, `d_fill` = #{head.dFill},
          `software` = #{head.software}, `date` = #{date}, `validated` = #{validated}
        where `id` = #{id}
    </update>

    <update id="updateDeclarationValue" parameterType="org.complitex.flexbuh.document.entity.DeclarationValue">
        update `declaration_value` set `row_num` = #{rowNum}, `name` = #{name}, `value` = #{value} where `id` = #{id}
    </update>

    <select id="selectDeclarationsByIds" parameterType="list" resultMap="declarationResultMap">
        select * from `declaration`
          where `id` in (<foreach collection="list" separator="," item="item">#{item}</foreach>)
    </select>

    <sql id="fromDeclarationWhereProfile">
        from `declaration` d left join `person_profile` pp on (d.`person_profile_id` = pp.`id`)
          where d.`session_id` = #{sessionId} and (pp.`selected` = true or (d.`person_profile_id` is null
            and (select count(*) = 0 from `person_profile` where `session_id` = #{sessionId} and `selected` = true)))
    </sql>

    <select id="selectDeclarationYears" parameterType="long" resultType="int">
        select `period_year` <include refid="fromDeclarationWhereProfile"/> group by `period_year`
    </select>

    <select id="selectDeclarationPeriods" parameterType="map" resultType="org.complitex.flexbuh.document.entity.Period">
        select `period_type` as type, `period_month` - 1 as month <include refid="fromDeclarationWhereProfile"/>
          and `period_year` = #{year} group by `period_type`, `period_month`
    </select>

    <select id="selectPossibleDeclarationParentId" parameterType="long" resultType="long">
        select
           distinct parent.`id`
        from
           `declaration` child
            left join `document` child_doc on (child.`c_doc` = child_doc.`c_doc` and child.`c_doc_sub` = child_doc.`c_doc_sub`)
            left join `declaration` parent on (parent.`c_doc` = child_doc.`parent_c_doc` and parent.`c_doc_sub` = child_doc.`parent_c_doc_sub`)
            left join `document` parent_doc on (parent_doc.`c_doc` = parent.`c_doc` and parent_doc.`c_doc_sub` = parent.`c_doc_sub`)
        where
            (child.`person_profile_id` = parent.`person_profile_id` or (child.`person_profile_id` is null and parent.`person_profile_id` is null))
            and child.`period_type` = parent.`period_type`
            and child.`period_month` = parent.`period_month`
            and child.`period_year` = parent.`period_year`
            and child.`id` = #{id}
    </select>

    <select id="selectPossibleDeclarationParent" parameterType="long" resultMap="declarationResultMap">
        select
           distinct parent.*, parent_doc.`name_uk` as `name`
        from
           `declaration` child
            left join `document` child_doc on (child.`c_doc` = child_doc.`c_doc` and child.`c_doc_sub` = child_doc.`c_doc_sub`)
            left join `declaration` parent on (parent.`c_doc` = child_doc.`parent_c_doc` and parent.`c_doc_sub` = child_doc.`parent_c_doc_sub`)
            left join `document` parent_doc on (parent_doc.`c_doc` = parent.`c_doc` and parent_doc.`c_doc_sub` = parent.`c_doc_sub`)
        where
            (child.`person_profile_id` = parent.`person_profile_id` or (child.`person_profile_id` is null and parent.`person_profile_id` is null))
            and child.`period_type` = parent.`period_type`
            and child.`period_month` = parent.`period_month`
            and child.`period_year` = parent.`period_year`
            and child.`id` = #{id}
        </select>
</mapper>